name: Build and Deploy Cloud Run

on:
  push:
    branches:
      - main
      - test
      - dev

jobs:
  build:
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout Code"
        uses: actions/checkout@v4

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_VIDA }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT_VIDA }}"

      - name: "Set up Docker Buildx"
        uses: "docker/setup-buildx-action@v3"

      - name: "Login to GCR"
        uses: "docker/login-action@v3"
        with:
          registry: us-docker.pkg.dev
          username: oauth2accesstoken
          password: "${{ steps.auth.outputs.access_token }}"

      - name: "Docker Build and Push"
        uses: "docker/build-push-action@v5"
        with:
          context: .
          push: ${{ github.event_name != 'pull_request' }}
          tags: "us-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/${{ secrets.GCP_ARTIFACT_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }}"

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          token_format: "access_token"
          workload_identity_provider: "${{ secrets.WIF_PROVIDER_VIDA }}"
          service_account: "${{ secrets.WIF_SERVICE_ACCOUNT_VIDA }}"

      - id: "deploy"
        name: "Deploy Cloud Run"
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          image: "us-docker.pkg.dev/${{ steps.auth.outputs.project_id }}/${{ secrets.GCP_ARTIFACT_REPOSITORY }}/${{ github.event.repository.name }}:${{ github.sha }}"
          service: "is-cr-${{ github.event.repository.name }}-${{ github.ref_name }}"
          region: "${{ secrets.GCP_REGION }}"
          env_vars: |
            PORT=8080

      - name: "Cloud Run URL"
        run: 'echo "${{ steps.deploy.outputs.url }}"'
